/* colors from everforest https://github.com/sainnhe/everforest */
:root {
    --bg: #F3EAD3;
    --bg-light: #EAE4CA;
    --bg-dark: #E5DFC5;
    --sep: #E5DFC5;
    --text: #5C6A72;
    --text2: #939F91;
    --accent1: #8DA101;
    --accent2: #93B259;
    --accent3: #A7C080;
    --on-accent: #E5E6C5;
    --accent-gradient: linear-gradient(135deg, var(--accent1), var(--accent2), var(--accent3));
    --radius: .4rem;
}

@media (prefers-color-scheme: dark) {
    :root {
        --bg: #333C43;
        --bg-light: #3A464C;
        --bg-dark: #293136;
        --sep: #434F55;
        --text: #D3C6AA;
        --text2: #859289;
        --accent1: #A7C080;
        --accent2: #93B259;
        --accent3: #8DA101;
        --on-accent: #48584E;
    }

    /* should blind people less when in dark mode (see simple.css) */
    img {
        opacity: 80%;
    }
}

/* mobile fixes */
@media only screen and (max-width: 720px) {
    textarea,
    select,
    input,
    button,
    video,
    audio {
        width: 100%;
    }
}

*,
::before,
::after {
    box-sizing: border-box;
}

html {
    /* Snippet from modern-normalize.css */
    font-family: system-ui,
    'Segoe UI',
    Roboto,
    Helvetica,
    Arial,
    sans-serif,
    'Apple Color Emoji',
    'Segoe UI Emoji';
    -webkit-text-size-adjust: 100%;
    tab-size: 4;

    /* nicer scrolling */
    scroll-behavior: smooth;
}

body {
    font-size: 1.15rem;
    line-height: 1.8rem;
    margin: 0;
    display: grid;
    grid-template-columns: 1fr 75% 1fr;
    background-color: var(--bg);
}

body * {
    grid-column: 2;
    color: var(--text);
}

/* scrollbar */
/**
webkit
while it feels more customizable, the firefox standard scrollbar with custom color is better
which feels counter intuitive, but i guess that's why they don't implement more scrollbar features
*/
*::-webkit-scrollbar {
    height: .4rem;
    width: .4rem;
}

*::-webkit-scrollbar-track:hover {
    background-color: var(--bg-dark);
}

*::-webkit-scrollbar-thumb {
    border-radius: var(--radius);
    background-color: var(--accent1);
}

*::-webkit-scrollbar-thumb:hover {
    background-color: var(--accent2);
}

*::-webkit-scrollbar-thumb:active {
    background-color: var(--accent3);
}

/**
firefox, the browser with the better scrollbar (imho)
the rule is inside a @supports block so it doesn't apply to webkit browsers and makes their scrollbar even worse
*/
@supports not selector(::-webkit-scrollbar-thumb) {
    * {
        scrollbar-color: var(--accent1) transparent;
    }
}

/* header, like the big one at the start of the page */
body > header {
    background-color: var(--bg-light);
    grid-column: -1 / 1;
    padding: 3rem;
    text-align: center;
    border-bottom: var(--sep) 1px solid;
}

body > header > h1 {
    background: var(--accent-gradient);
    background-clip: text;
    /*color: rgba(0, 0, 0, 50%);*/
    color: transparent;

    width: fit-content;
    margin: auto;
    /*padding: max-content;*/
    padding: 0.5rem;
    filter: drop-shadow(var(--bg-dark) 0 0 .3rem);
}

body > header > p {
    margin: 1rem auto;
}

/* headers and paragraphs */
/* stolen from simple.css */
p, h1, h2, h3, h4, h5, h6 {
    overflow-wrap: break-word;
}

/* Format headers */
h1 {
    font-size: 3rem;
}

h2 {
    font-size: 2.6rem;
    margin-top: 3rem;
}

h3 {
    font-size: 2rem;
    margin-top: 3rem;
}

h4 {
    font-size: 1.44rem;
}

h5 {
    font-size: 1.15rem;
}

h6 {
    font-size: 0.96rem;
}

p {
    margin-top: 0;
    margin-bottom: 2rem;
}

/* Fix line height when title wraps */
h1,
h2,
h3 {
    line-height: 1.1;
}

/* nicer blockquotes */
blockquote {
    margin: 1rem;
    padding: 1rem;
    background-color: var(--bg-light);
    border-left: 0.3rem solid var(--accent1);
}

blockquote p {
    margin: 0;
}

/* makes separators more consistent */
hr {
    border: 0;
    border-bottom: .135rem solid var(--sep);
}

/**
 - makes dt bold
 - uses relative bold for bold text, from modern-normalize.css
*/
b, strong, dt {
    font-weight: bolder;
}

/* shorter distance from side for dd */
dd {
    margin-left: 1.5rem;
}

/* tables */
table {
    width: 100%;
    border-spacing: 0;
    text-align: justify;
    border-collapse: collapse;
    margin-bottom: 1rem;
}

table caption {
    font-weight: bolder;
    font-size: 1.44rem;
    margin-bottom: 1rem;
}

thead th {
    border-bottom: .135rem solid var(--sep);
}

tbody td {
    border-bottom: .1rem solid var(--sep);
}

tfoot th {
    border-top: .135rem solid var(--sep);
}

td, th {
    padding: .5rem;
}

tr:nth-child(even), thead tr, tfoot tr {
    background-color: var(--bg-light);
}

/* kbd, i think this is so cool, if you hover over it it moves down like a key :) */
/* i get impressed easily */
kbd {
    background-color: var(--accent1);
    border: .1rem solid var(--accent2);
    border-bottom: .3rem solid var(--accent2);
    border-radius: var(--radius);
    color: var(--on-accent);
    padding: .1rem .3rem;
    transition: border-bottom-width .3s ease-out, top .3s ease-out;
    top: 0;
    position: relative;
}

kbd:hover {
    border-bottom-width: .1rem;
    top: .3rem;
}

/* Links */
a[href] {
    color: var(--accent1);
    text-decoration: none;
}

a[href]:hover {
    color: var(--accent2);
    text-decoration: underline wavy var(--accent2);
}

a[href]:visited {
    color: var(--accent3);
    text-decoration: underline wavy var(--accent3);
}

/* inline formatting ig */
code, samp {
    background-color: var(--bg-light);
    border-radius: var(--radius);
    padding: .3rem;
}

pre {
    background-color: var(--bg-light);
    border-radius: var(--radius);
    padding: 1rem;
    overflow-x: auto;
}

/* move underline lower */
a[href], u, ins, abbr {
    text-underline-position: under;
}

abbr[title] {
    cursor: help;
}

q {
    font-style: italic;
}

mark, var, time {
    border-radius: var(--radius);
    padding: .2rem .5rem .3rem;
    background-color: var(--bg-light);
}

mark {
    background: var(--accent-gradient);
    color: var(--on-accent);
}

img,
video {
    max-width: 100%;
    height: auto;
    border-radius: var(--radius);
}

/* form elements */
fieldset {
    border: .1rem solid var(--sep);
    border-radius: var(--radius);
    padding: 1rem;
}

label {
    display: block;
    margin-bottom: .3rem;
}

textarea, input, select {
    appearance: none;
    border: 0;
    border-radius: var(--radius);
    padding: .4rem .6rem;
    background: var(--bg-dark);
    color: var(--text);
    font: inherit;
}

/* select elem customization */

/* hide scrollbar */
select[multiple] {
    overflow-y: auto;
}

/* changes background color for selected option */
option:checked {
    background-color: var(--accent1);
    color: var(--on-accent);
}

/**
 this adds a small arrow to the single selection element thing, and it has been stolen from simple.css
 https://github.com/kevquirk/simple.css/blob/be882ce561b0fe5ced621cc64595c812790b2524/simple.css#L457-L467
*/
select:not([multiple]) {
    background-image: linear-gradient(45deg, transparent 49%, var(--text) 51%),
    linear-gradient(135deg, var(--text) 51%, transparent 49%);
    background-position: calc(100% - 15px), calc(100% - 10px);
    background-size: 5px 5px, 5px 5px;
    background-repeat: no-repeat;
    padding-inline-end: 25px;
}

*[dir="rtl"] select:not([multiple]) {
    background-position: 10px, 15px;
}

/**
custom checkbox
this was a pain
- works like a checkbox
- uses the accent color
- animated hover effect
- i should've probably left the default checkbox
*/
input[type="checkbox"] {
    background-color: var(--bg-dark);
    margin: 0;
    padding: 0;
    color: var(--accent1);
    width: 1.25rem;
    height: 1.25rem;
    transform: translateY(0.16rem);
    transition: background-color .2s ease;
    cursor: pointer;
}

input[type="checkbox"]:checked::before {
    content: "";
    position: absolute;
    top: 15%;
    left: 30%;
    width: .5rem;
    height: .75rem;
    border-right: solid var(--bg-dark) 0.25rem;
    border-bottom: solid var(--bg-dark) 0.25rem;
    transform: rotate(40deg);
}

/**
custom radio button
this was a pain like the checkbox
- works like a radio button
- uses the accent color
- animated hover effect
- i should've probably left the default radio button
*/
input[type="radio"] {
    background-color: var(--bg-dark);
    margin: 0;
    padding: 0;
    color: var(--accent1);
    width: 1.25rem;
    height: 1.25rem;
    transform: translateY(0.16rem);
    border-radius: 100%;
    transition: background-color .2s ease;
    cursor: pointer;
}

input[type="radio"]:checked::before {
    content: " ";
    position: absolute;
    top: 50%;
    left: 50%;
    width: .6em;
    height: .6em;
    background-color: var(--bg-dark);
    border-radius: 100%;
    transform: translate(-50%, -50%);
}

/**
misc rules for checkboxes and radios
- hover background color
- disabled background color
- checked background color
- fix for the label
*/
input[type="checkbox"]:checked, input[type="radio"]:checked {
    background-color: var(--accent1);
}

input[type="checkbox"]:hover:not(:disabled), input[type="radio"]:hover:not(:disabled) {
    background-color: var(--accent2);
}

input[type="checkbox"]:disabled, input[type="radio"]:disabled {
    background-color: var(--bg-light);
    cursor: not-allowed;
}

input[type="checkbox"] + label,
input[type="radio"] + label {
    display: inline-block;
}

/* makes color picker bigger */
input[type="color"] {
    height: 2.5rem;
}

/**
range, most of the css here was from https://range-input-css.netlify.app/
the style change the thumb color to the accent color, the track gets the dark color and is also thinner (and rounded)
*/
input[type="range"] {
    -webkit-appearance: none;
    appearance: none;
    background: transparent;
    cursor: pointer;
}

/* Removes default focus */
input[type="range"]:focus {
    outline: none;
}

/* webkit */
/* slider track */
input[type="range"]::-webkit-slider-runnable-track {
    background-color: var(--bg-dark);
    border-radius: var(--radius);
    height: 0.5rem;
}

/* slider thumb */
input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none; /* Override default look */
    appearance: none;
    margin-top: -4px; /* Centers thumb on the track */
    background-color: var(--accent1);
    border-radius: 100%;
    height: 1rem;
    width: 1rem;
}

input[type="range"]:hover::-webkit-slider-thumb {
    background-color: var(--accent2);
}

input[type="range"]:active::-webkit-slider-thumb {
    background-color: var(--accent3);
}

input[type="range"]:focus::-webkit-slider-thumb {
    outline: .135rem solid var(--accent1);
    outline-offset: .135rem;
}

/* firefox */
/* slider track */
input[type="range"]::-moz-range-track {
    background-color: var(--bg-dark);
    border-radius: var(--radius);
    height: 0.5rem;
}

/* slider thumb */
input[type="range"]::-moz-range-thumb {
    background-color: var(--accent1);
    border: none; /*Removes extra border that FF applies*/
    border-radius: var(--radius);
    height: 1rem;
    width: 1rem;
}

input[type="range"]:hover::-moz-range-thumb {
    background-color: var(--accent2);
}

input[type="range"]:active::-moz-range-thumb {
    background-color: var(--accent3);
}

input[type="range"]:focus::-moz-range-thumb {
    outline: .135rem solid var(--accent1);
    outline-offset: .135rem;
}

/**
button styling
- use accent colors
- add hover effect (animated)
- change pointer
- rules for disabled buttons
*/
button,
input[type="submit"],
input[type="reset"],
input[type="button"],
input[type="file"]::file-selector-button {
    appearance: none;
    font: inherit;
    background: var(--accent1);
    color: var(--on-accent);
    border: 0;
    border-radius: var(--radius);
    padding: .4rem .6rem;
    cursor: pointer;
    transition: background-color .3s ease-out;
    margin: .1rem;
}

button:disabled,
input[type="submit"]:disabled,
input[type="reset"]:disabled,
input[type="button"]:disabled,
input[type="file"]:disabled::file-selector-button {
    background-color: var(--bg-light);
    color: var(--text2);
    cursor: not-allowed;
}

button:hover:not(:disabled),
input[type="submit"]:hover:not(:disabled),
input[type="reset"]:hover:not(:disabled),
input[type="button"]:hover:not(:disabled),
input[type="file"]:not(:disabled)::file-selector-button:hover {
    background-color: var(--accent2);
}

/**
file input button customization:
- moves the button to the right
- does some styling (same as buttons with some extra rules to center it)
- moves the focus to the button instead
*/
input[type="file"] {
    padding: .7rem .6rem;
    position: relative;
    /*width: 20rem;*/
    text-overflow: ellipsis;
}

input[type="file"]:focus {
    outline: none;
}

/**
most efficient way to make sure the selected file text doesn't end up under the button
1h30m later i realize that this isn't the most efficient way (it was ironic at first but now it's even less ironic)
why? just because chrome decided to not stick to the standards and make this possible but firefox didn't
thus this "most efficient way" is kinda working on some browsers and is also a hack
because surely some languages are longer than this filler text

i also have no idea how to make this work without the filler text and only with css
if there's one thing i learned about css is that it gives you too much freedom with some elements
and then just makes you unable to move elements with others
*/
input[type="file"]::after {
    display: inline-block;
    content: "this is filler:)";
    visibility: hidden;
}

input[type="file"]::file-selector-button {
    margin: 0 .4rem;
    position: absolute;
    right: 0;
    top: 50%;
    transform: translateY(-50%);
}

input[type="file"]:focus::file-selector-button {
    outline: .135rem solid var(--accent1);
    outline-offset: .135rem;
}

/* rtl support for file picker */
*[dir="rtl"] input[type="file"]::file-selector-button {
    left: 0;
    right: unset;
}

/* i guess why not theme even the meter? */
/* this supports only chrome though (maybe safari), firefox doesn't have a way to style the meter */
meter::-webkit-meter-bar {
    background-color: var(--bg-dark);
    border-radius: var(--radius);
}

meter::-webkit-meter-optimum-value {
    background-color: var(--accent1);
    border-radius: var(--radius);
}

/* focus rules, so they are consistent and also are more in line with the theme */
:focus {
    outline: .135rem solid var(--accent1);
    outline-offset: .135rem;
}

/* snippet stolen from modern-normalize.css */

/**
1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
2. Correct the odd 'em' font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
    font-family: ui-monospace,
    SFMono-Regular,
    Consolas,
    'Liberation Mono',
    Menlo,
    monospace; /* 1 */
    font-size: 1em; /* 2 */
}

/**
Add the correct font size in all browsers.
*/

small {
    font-size: 80%;
    color: var(--text2);
}

/**
Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.
*/

sub,
sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
}

sub {
    bottom: -0.25em;
}

sup {
    top: -0.5em;
}

