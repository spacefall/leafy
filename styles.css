/* colors */
:root {
    --base-color: #333;
    --base-color-light: #555;
    --base-color-dark: #222;
    --separator-color: #ccc;
    --separator2: #aaa;
    --text: #EEE;
    --text2: #AAA;
    /* accent colors from ibm style guide (should be colorblind friendly)*/
    --accent1: #ffb000;
    --accent2: #fe6100;
    --on-accent: #000;
}

*,
::before,
::after {
    box-sizing: border-box;
}

html {
    /* modern-normalize.css */
    font-family:
            system-ui,
            'Segoe UI',
            Roboto,
            Helvetica,
            Arial,
            sans-serif,
            'Apple Color Emoji',
            'Segoe UI Emoji';
    -webkit-text-size-adjust: 100%;
    tab-size: 4;

    /* nicer scrolling */
    scroll-behavior: smooth;
}

body {
    font-size: 1.15rem;
    line-height: 1.8rem;
    margin: 0;
    display: grid;
    grid-template-columns: 1fr 80% 1fr;
    background-color: var(--base-color);
}

body > * {
    grid-column: 2;
    color: var(--text);
}

body > header {
    background-color: var(--base-color-light);
    color: var(--text);

    /* allignment */
    grid-column: -1 / 1;
    padding: 3rem;

    text-align: center;
    border-bottom: var(--separator-color) 1px solid;
}

body > header > h1 {
    background: linear-gradient(to left, var(--accent1), var(--accent2));
    background-clip: text;
    /*color: rgba(0, 0, 0, 50%);*/
    color: transparent;

    width: max-content;
    margin: auto;
    /*padding: max-content;*/
    padding: 0.5rem;
    filter: drop-shadow(var(--base-color-dark) 0 0 .3rem);
}

body > header > p {
    margin: 1rem auto;
}

/* stolen from simple.css */
p, h1, h2, h3, h4, h5, h6 {
    overflow-wrap: break-word;
}

/* Format headers */
h1 {
    font-size: 3rem;
}

h2 {
    font-size: 2.6rem;
    margin-top: 3rem;
}

h3 {
    font-size: 2rem;
    margin-top: 3rem;
}

h4 {
    font-size: 1.44rem;
}

h5 {
    font-size: 1.15rem;
}

h6 {
    font-size: 0.96rem;
}

p {
    margin-top: 0;
    margin-bottom: 2rem;
}

/* Fix line height when title wraps */
h1,
h2,
h3 {
    line-height: 1.1;
}

/* nicer blockquotes */
blockquote {
    margin: 1rem;
    padding: 1rem;
    background-color: var(--base-color-light);
    border-left: 0.3rem solid var(--accent1);
}

blockquote p {
    margin: 0;
}

/* makes separators more consistent */
hr {
    border: 0;
    border-bottom: .135rem solid var(--separator-color);
}

/**
 - makes dt bold
 - uses relative bold for bold text, see modern-normalize.css
*/
b, strong, dt {
    font-weight: bolder;
}

/* shorter distance from side for dd */
dd {
    margin-left: 1.5rem;
}

/* tables */
table {
    width: 100%;
    border-spacing: 0;
    text-align: justify;
    border-collapse: collapse;
}

table caption {
    font-weight: bolder;
    font-size: 1.44rem;
    margin-bottom: 1rem;
}

thead th {
    border-bottom: .135rem solid var(--separator-color);
}

tbody td {
    border-bottom: .1rem solid var(--separator2);
}

tfoot th {
    border-top: .135rem solid var(--separator-color);
}

td, th {
    padding: .5rem;
}

tr:nth-child(even), thead tr, tfoot tr {
    background-color: var(--base-color-light);
}

/* kbd */
kbd {
    background-color: var(--accent1);
    border: .1rem solid var(--accent2);
    border-bottom: .3rem solid var(--accent2);
    border-radius: .4rem;
    color: var(--on-accent);
    padding: .1rem .3rem;
    transition: border-bottom-width .3s ease-out, top .3s ease-out;
    top: 0;
    position: relative;
}

kbd:hover {
    border-bottom-width: .1rem;
    top: .3rem;
}

/* code */
code, samp {
    background-color: var(--base-color-light);
    /*border: .1rem solid var(--separator2);*/
    border-radius: .4rem;
    padding: .3rem;
}

/* pre */
pre {
    background-color: var(--base-color-light);
    border-radius: .4rem;
    padding: 1rem;
    overflow-x: auto;
}

/* move underline lower */
a[href], u, ins, abbr {
    text-underline-position: under;
}

/* Links */
a[href] {
    color: var(--accent1);
    text-decoration: none;
    transition: color .3s ease-out, text-decoration .3s ease-out;
}

a[href]:hover {
    color: var(--accent2);
    text-decoration: underline wavy var(--accent2);
    /*border-bottom: .1rem solid var(--accent2);*/
}

abbr[title] {
    cursor: help;
}

q {
    font-style: italic;
}

mark, var, time {
    border-radius: .4rem;
    padding: .2rem .5rem .3rem;
    background-color: var(--base-color-light);
    /*color: var(--accent1);*/
}

mark {
    background-color: var(--accent1);
    color: var(--on-accent);
}

fieldset {
    border: .1rem solid var(--separator-color);
    border-radius: .4rem;
    padding: 1rem;
}

label {
    display: block;
    margin-bottom: .3rem;
}

textarea, input, select {
    appearance: none;
    /*height: 2rem;*/
    /*border: .1rem solid var(--separator-color);*/
    border: 0;
    border-radius: .4rem;
    padding: .4rem .6rem;
    background: var(--base-color-dark);
    color: var(--text);
    font: inherit;
}

select[multiple] {
    overflow-y: auto;
}

/**
 these rules add small elements to the inputs, for example a dropdown arrow or the the tick to the checkbox
 they have been shamelessly stolen from simple.css, links for snippets follow:
 - https://github.com/kevquirk/simple.css/blob/be882ce561b0fe5ced621cc64595c812790b2524/simple.css#L457-L467
*/
select:not([multiple]) {
    background-image: linear-gradient(45deg, transparent 49%, var(--text) 51%),
    linear-gradient(135deg, var(--text) 51%, transparent 49%);
    background-position: calc(100% - 15px), calc(100% - 10px);
    background-size: 5px 5px, 5px 5px;
    background-repeat: no-repeat;
    padding-inline-end: 25px;
}
*[dir="rtl"] select:not([multiple]) {
    background-position: 10px, 15px;
}

/* checkbox */
input[type="checkbox"] {
    background-color: var(--base-color-dark);
    margin: 0;
    padding: 0;
    color: var(--accent1);
    width: 1.25rem;
    height: 1.25rem;
    transform: translateY(0.16rem);
    transition: background-color .2s ease;
    cursor: pointer;
}

input[type="checkbox"]::before {
    content: "";
    position: absolute;
    top: 15%;
    left: 30%;
    width: .5rem;
    height: .75rem;
    border-right: solid var(--base-color-dark) 0.25rem;
    border-bottom: solid var(--base-color-dark) 0.25rem;
    /*box-shadow: inset 1em 1em #000;*/
    transform: scale(0);
}

input[type="checkbox"]:checked, input[type="radio"]:checked  {
    background-color: var(--accent1);
}

input[type="checkbox"]:checked::before {
    transform: rotate(40deg) scale(1);
}

input[type="checkbox"]:hover:not(:disabled), input[type="radio"]:hover:not(:disabled) {
    background-color: var(--accent2);
}

input[type="checkbox"]:disabled, input[type="radio"]:disabled {
    cursor: not-allowed;
}

input[type="checkbox"]:checked:disabled, input[type="radio"]:checked:disabled {
    background-color: var(--base-color-light);
}

/* radio */
input[type="radio"] {
    background-color: var(--base-color-dark);
    margin: 0;
    padding: 0;
    color: var(--accent1);
    width: 1.25rem;
    height: 1.25rem;
    transform: translateY(0.16rem);
    border-radius: 100%;
    transition: background-color .2s ease;
    cursor: pointer;
}

input[type="radio"]::before {
    content: " ";
    position: absolute;
    top: 50%;
    left: 50%;
    width: .6em;
    height: .6em;
    background-color: var(--base-color-dark);
    border-radius: 100%;
    /*box-shadow: inset 1em 1em #000;*/
    transform: scale(0);
}

input[type="radio"]:checked::before {
    transform: scale(1) translate(-50%, -50%);
}

/* color */
input[type="color"] {
    height: 2.5rem;
}

/* range */

/*********** Baseline, reset styles ***********/
input[type="range"] {
    -webkit-appearance: none;
    appearance: none;
    background: transparent;
    cursor: pointer;
    width: 12rem;
}

/* Removes default focus */
input[type="range"]:focus {
    outline: none;
}

/******** Chrome, Safari, Opera and Edge Chromium styles ********/
/* slider track */
input[type="range"]::-webkit-slider-runnable-track {
    background-color: var(--base-color-dark);
    border-radius: 0.5rem;
    height: 0.5rem;
}

/* slider thumb */
input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none; /* Override default look */
    appearance: none;
    margin-top: -4px; /* Centers thumb on the track */
    background-color: var(--accent1);
    border-radius: 0.5rem;
    height: 1rem;
    width: 1rem;
}

input[type="range"]:focus::-webkit-slider-thumb {
    outline: .135rem solid var(--accent1);
    outline-offset: .135rem;
}

/*********** Firefox styles ***********/
/* slider track */
input[type="range"]::-moz-range-track {
    background-color: var(--base-color-dark);
    border-radius: 0.5rem;
    height: 0.5rem;
}

/* slider thumb */
input[type="range"]::-moz-range-thumb {
    background-color: var(--accent1);
    border: none; /*Removes extra border that FF applies*/
    border-radius: 0.5rem;
    height: 1rem;
    width: 1rem;
}

input[type="range"]:focus::-moz-range-thumb{
    outline: .135rem solid var(--accent1);
    outline-offset: .135rem;
}

button,
input[type="submit"],
input[type="reset"],
input[type="button"],
input[type="file"]::file-selector-button{
    appearance: none;
    font: inherit;
    background-color: var(--accent1);
    color: var(--on-accent);
    border: 0;
    border-radius: .4rem;
    padding: .4rem .6rem;
    cursor: pointer;
    transition: background-color .3s ease-out;
}

button:disabled,
input[type="submit"]:disabled,
input[type="reset"]:disabled,
input[type="button"]:disabled,
input[type="file"]:disabled::file-selector-button {
    background-color: var(--base-color-light);
    color: var(--text2);
    cursor: not-allowed;
}

button:hover:not(:disabled),
input[type="submit"]:hover:not(:disabled),
input[type="reset"]:hover:not(:disabled),
input[type="button"]:hover:not(:disabled),
input[type="file"]:not(:disabled)::file-selector-button:hover {
    background-color: var(--accent2);
}

input[type="file"] {
    padding: .7rem .6rem;
    position: relative;
}

input[type="file"]::file-selector-button {
    position: absolute;
    right: 0;
    top: 50%;
    transform: translateY(-50%);
    margin: 0 .3rem;
}

*[dir="rtl"] input[type="file"]::file-selector-button {
    left: 0;
    right: unset;
}

:focus {
    outline: .135rem solid var(--accent1);
    outline-offset: .135rem;
}

/* stolen from modern-normalize.css */

/**
1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
2. Correct the odd 'em' font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
    font-family:
            ui-monospace,
            SFMono-Regular,
            Consolas,
            'Liberation Mono',
            Menlo,
            monospace; /* 1 */
    font-size: 1em; /* 2 */
}

/**
Add the correct font size in all browsers.
*/

small {
    font-size: 80%;
    color: var(--text2);
}

/**
Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.
*/

sub,
sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
}

sub {
    bottom: -0.25em;
}

sup {
    top: -0.5em;
}

